extends layout

block head
    link(href='http://fonts.googleapis.com/css?family=Dawning+of+a+New+Day', rel='stylesheet', type='text/css')
    script(src='/components/html2canvas/build/html2canvas.js')

block content
    style.
        //- @-webkit-keyframes glowRed {
        //-   from {
        //-     box-shadow: rgba(255, 0, 0, 0) 0 0 0;
        //-   }
        //-   50% {
        //-     box-shadow: rgba(255, 0, 0, 1) 0 0 15px 1px;
        //-   }
        //-   to {
        //-     box-shadow: rgba(255, 0, 0, 0) 0 0 0;
        //-   }
        //- }
        html, body {
          overflow: hidden;
          margin: 0;
          padding: 0;
        }
        body {
          display: -webkit-flex;
          -webkit-align-items: center;
          -webkit-justify-content: center;
          box-sizing: border-box;
        }
        article {
          text-align: center;
        }
        #monitor {
          /*-webkit-transform: scaleX(-1);*/
          height: 300px;
          /*-webkit-box-reflect: below 20px -webkit-linear-gradient(top, transparent, transparent 80%, rgba(255,255,255,0.2));*/
        }
        #live {
          position: absolute;
          z-index: 1;
          color: white;
          font-weight: 600;
          font-size: 16pt;
          right: 35px;
          top: 20px;
          text-shadow: 1px 0px black;
          letter-spacing: 1px;
          font-family: 'Dawning of a New Day', cursive;
        }
        #live span {
            display: block;
        }
        #live .name {
            font-size: 20pt;
        }
        #gallery img {
          position: absolute;
          z-index: -1;
          height: 75px;
        }
        #gallery img {
          float: left;
          height: 75px;
        }
        .container {
          padding: 10px 25px 5px 25px;
          background: black;
          border-radius: 4px;
          display: inline-block;
          position: relative;
        }
        h1 {
          font-weight: 300;
        }

        .blur {
          -webkit-filter: blur(3px);
        }
        .brightness {
          -webkit-filter: brightness(5);
        }
        .contrast {
          -webkit-filter: contrast(40);
        }
        .hue-rotate {
          -webkit-filter: hue-rotate(90deg);
        }
        .hue-rotate2 {
          -webkit-filter: hue-rotate(180deg);
        }
        .hue-rotate3 {
          -webkit-filter: hue-rotate(270deg);
        }
        .saturate {
          -webkit-filter: saturate(10);
        }
        .grayscale {
          -webkit-filter: grayscale(1);
        }
        .sepia {
          -webkit-filter: sepia(1);
        }
        .invert {
          -webkit-filter: invert(1);
        }

        // testing
        .snapshot {
            -webkit-filter: grayscale(1);
        }

    article
        h1 CSS Filters Photobooth
        section#app(hidden)
        p
            button(onclick="capture(this)") Snapshot
        div#camera.container
            span#live
                span.name Nate &amp; Mia
                span.date Oct. 5th 2013
            video#monitor(autoplay,onclick="changeFilter(this)",title="Click me to see different filters")
        div#splash
        p#errorMessage Click to begin
        div#gallery
    canvas(id="photo",style="display:none")
    script.
        navigator.getUserMedia = navigator.webkitGetUserMedia || navigator.getUserMedia;
        window.URL = window.URL || window.webkitURL;

        var app = document.getElementById('app');
        var video = document.getElementById('monitor');
        var canvas = document.getElementById('photo');
        var effect = document.getElementById('effect');
        var gallery = document.getElementById('gallery');
        var ctx = canvas.getContext('2d');
        var intervalId = null;
        var idx = 0;
        var filters = [
          'grayscale',
          'sepia',
          'blur',
          'brightness',
          'contrast',
          'hue-rotate', 'hue-rotate2', 'hue-rotate3',
          'saturate',
          'invert',
          ''
        ];

        function changeFilter(el) {
          el.className = '';
          var effect = filters[idx++ % filters.length];
          if (effect) {
            el.classList.add(effect);
          }
        }

        function gotStream(stream) {
          if (window.URL) {
            video.src = window.URL.createObjectURL(stream);
          } else {
            video.src = stream; // Opera.
          }

          video.onerror = function(e) {
            stream.stop();
          };

          stream.onended = noStream;

          video.onloadedmetadata = function(e) { // Not firing in Chrome. See crbug.com/110938.
            document.getElementById('splash').hidden = true;
            document.getElementById('app').hidden = false;
          };

          // Since video.onloadedmetadata isn't firing for getUserMedia video, we have
          // to fake it.
          setTimeout(function() {
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            document.getElementById('splash').hidden = true;
            document.getElementById('app').hidden = false;
          }, 50);
        }

        function noStream(e) {
          var msg = 'No camera available.';
          if (e.code == 1) {
            msg = 'User denied access to use camera.';
          }
          document.getElementById('errorMessage').textContent = msg;
        }

        function capture() {
            ctx.drawImage(video, 0, 0);
            var img = document.createElement('img');
            img.src = canvas.toDataURL('image/png');

            $(img).css('-webkit-filter', 'grayscale(1)');

            var $frame = $('<div id="frame">')
                .append(img)
                .append('Hello!');

            $('body').append($frame);

            html2canvas(document.getElementById('frame'), {
                useCORS: true,
                allowTaint: true,
                onrendered: function(canvas) {
                    document.body.appendChild(canvas);
                }
            });
        }

        //- function capture() {
        //-   if (intervalId) {
        //-     clearInterval(intervalId);
        //-     intervalId = null;
        //-     return;
        //-   }

        //-   intervalId = setInterval(function() {
        //-     ctx.drawImage(video, 0, 0);
        //-     var img = document.createElement('img');
        //-     img.src = canvas.toDataURL('image/webp');

        //-     var angle = Math.floor(Math.random() * 36);
        //-     var sign = Math.floor(Math.random() * 2) ? 1 : -1;
        //-     img.style.webkitTransform = 'rotateZ(' + (sign * angle) + 'deg)';

        //-     var maxLeft = document.body.clientWidth;
        //-     var maxTop = document.body.clientHeight;

        //-     img.style.top = Math.floor(Math.random() * maxTop) + 'px';
        //-     img.style.left = Math.floor(Math.random() * maxLeft) + 'px';

        //-     gallery.appendChild(img);
        //-   }, 150);
        //- }

        //- function init(el) {
          if (!navigator.getUserMedia) {
            document.getElementById('errorMessage').innerHTML = 'Sorry. <code>navigator.getUserMedia()</code> is not available.';
            return;
          }
          //- el.onclick = capture;
          //- el.textContent = 'Snapshot';
          navigator.getUserMedia({video: true}, gotStream, noStream);
        //- }

        window.addEventListener('keydown', function(e) {
          if (e.keyCode == 27) { // ESC
            document.querySelector('details').open = false;
          }
        }, false);
